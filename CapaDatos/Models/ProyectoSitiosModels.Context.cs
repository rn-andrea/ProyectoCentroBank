//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatos.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CentroBankEntities : DbContext
    {
        public CentroBankEntities()
            : base("name=CentroBankEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Encargados> Encargados { get; set; }
        public virtual DbSet<EstadoSolicitud> EstadoSolicitud { get; set; }
        public virtual DbSet<PosicionPagina> PosicionPagina { get; set; }
        public virtual DbSet<Provincias> Provincias { get; set; }
        public virtual DbSet<RecepcionSolicitudes> RecepcionSolicitudes { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<SolicitudCredito> SolicitudCredito { get; set; }
        public virtual DbSet<Tendencias> Tendencias { get; set; }
        public virtual DbSet<TipoCambio> TipoCambio { get; set; }
        public virtual DbSet<TipoCreditos> TipoCreditos { get; set; }
        public virtual DbSet<TipoIdentificacion> TipoIdentificacion { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<VisitaPagina> VisitaPagina { get; set; }
    
        public virtual int sp_Registro_UsuarioNuevo(Nullable<int> iDU, string tipoid, string nombre, string apellido, string contraseña, Nullable<System.DateTime> nacimiento, string nacionalidad, string provincia, Nullable<int> telefono, string correo, ObjectParameter mensaje)
        {
            var iDUParameter = iDU.HasValue ?
                new ObjectParameter("IDU", iDU) :
                new ObjectParameter("IDU", typeof(int));
    
            var tipoidParameter = tipoid != null ?
                new ObjectParameter("tipoid", tipoid) :
                new ObjectParameter("tipoid", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var nacimientoParameter = nacimiento.HasValue ?
                new ObjectParameter("nacimiento", nacimiento) :
                new ObjectParameter("nacimiento", typeof(System.DateTime));
    
            var nacionalidadParameter = nacionalidad != null ?
                new ObjectParameter("nacionalidad", nacionalidad) :
                new ObjectParameter("nacionalidad", typeof(string));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("provincia", provincia) :
                new ObjectParameter("provincia", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Registro_UsuarioNuevo", iDUParameter, tipoidParameter, nombreParameter, apellidoParameter, contraseñaParameter, nacimientoParameter, nacionalidadParameter, provinciaParameter, telefonoParameter, correoParameter, mensaje);
        }
    
        public virtual int sp_ValidarUsuario(Nullable<int> usuario, string contraseña, ObjectParameter mensaje)
        {
            var usuarioParameter = usuario.HasValue ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(int));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ValidarUsuario", usuarioParameter, contraseñaParameter, mensaje);
        }
    
        public virtual int sp_Registro_SolicitudCredito(Nullable<int> iDU, Nullable<int> idSoli, string tipoid, string nombre, string apellido, Nullable<System.DateTime> nacimiento, Nullable<int> telefono, string provincia, string correo, string direccion, Nullable<int> tipoCredito, Nullable<double> monto, Nullable<System.DateTime> fechaSoli, ObjectParameter mensaje)
        {
            var iDUParameter = iDU.HasValue ?
                new ObjectParameter("IDU", iDU) :
                new ObjectParameter("IDU", typeof(int));
    
            var idSoliParameter = idSoli.HasValue ?
                new ObjectParameter("idSoli", idSoli) :
                new ObjectParameter("idSoli", typeof(int));
    
            var tipoidParameter = tipoid != null ?
                new ObjectParameter("tipoid", tipoid) :
                new ObjectParameter("tipoid", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var nacimientoParameter = nacimiento.HasValue ?
                new ObjectParameter("nacimiento", nacimiento) :
                new ObjectParameter("nacimiento", typeof(System.DateTime));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("telefono", telefono) :
                new ObjectParameter("telefono", typeof(int));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("provincia", provincia) :
                new ObjectParameter("provincia", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            var tipoCreditoParameter = tipoCredito.HasValue ?
                new ObjectParameter("tipoCredito", tipoCredito) :
                new ObjectParameter("tipoCredito", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("monto", monto) :
                new ObjectParameter("monto", typeof(double));
    
            var fechaSoliParameter = fechaSoli.HasValue ?
                new ObjectParameter("fechaSoli", fechaSoli) :
                new ObjectParameter("fechaSoli", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Registro_SolicitudCredito", iDUParameter, idSoliParameter, tipoidParameter, nombreParameter, apellidoParameter, nacimientoParameter, telefonoParameter, provinciaParameter, correoParameter, direccionParameter, tipoCreditoParameter, montoParameter, fechaSoliParameter, mensaje);
        }
    
        public virtual ObjectResult<sp_Recepcion_Result> sp_Recepcion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Recepcion_Result>("sp_Recepcion");
        }
    }
}
